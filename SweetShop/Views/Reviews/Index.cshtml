@using SweetShop.ViewModels.Review;
@model IEnumerable<IndexReviewViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div class="row row-cols-1 row-cols-md-3 g-4">

    @foreach (var item in Model)
    {


        <div class="card bg-white mb-5 col-4 p-1 m-1" style="max-width: 18rem;">
            <div class="card-header">@item.Client <span class="float-right">Rating: @item.Rating</span></div>
            <div class="card-body">
                <h5 class="card-title">@item.Product</h5>
                <p class="card-text">@item.Description</p>
            </div>
        </div>
    }


</div>
@*<table class="table">
    <thead>
    <tr>

    <th>
    @Html.DisplayNameFor(model => model.Rating)
    </th>
    <th>
    @Html.DisplayNameFor(model => model.Client)
    </th>
    <th>
    @Html.DisplayNameFor(model => model.Product)
    </th><th>
    @Html.DisplayNameFor(model => model.Description)
    </th>

    <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
    <tr>

    <td>
    @Html.DisplayFor(modelItem => item.Rating)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.Client)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.Product)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.Description)
    </td>

    <td>
    <a asp-action="Update" asp-route-id="@item.Id">Update</a> |
    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
    </td>
    </tr>
    }
    </tbody>
    </table>*@
